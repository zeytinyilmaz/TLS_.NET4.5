<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAMAAAAwAAAAP8AAAD5AAAA+QAAAPkAAAD5AAAA+QAAAPkAAAD5AAAA+QAA
        APkAAAD5AAAA+QAAAPkAAAD5AAAA+QAAAPkAAAD5AAAA+QAAAPkAAAD5AAAA+QAAAP8AAADAAAAADAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAADNAAAAlAAAAEgAAABLAAAASwAAAEsAAABLAAAASwAA
        AEsAAABLAAAASwAAAEsAAABLAAAASwAAAEsAAABLAAAASwAAAEsAAABLAAAASwAAAEsAAABIAAAAlAAA
        AM0AAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAM4AAABnAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABnAAAAzgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAzgAAAGcAAAAAAAAADgAA
        AGYAAABdAAAAAAAAAAAAAAAAAAAAAAAAACEAAACYAAAAmAAAACAAAAAZAAAAlAAAAJwAAAAnAAAAEwAA
        AI4AAACgAAAAKwAAAGMAAADNAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAADOAAAAZQAA
        ACAAAACxAAAA9gAAAIIAAAAGAAAAAAAAAAAAAAAAAAAAIAAAAJEAAACRAAAAHgAAABgAAACNAAAAlQAA
        ACUAAAASAAAAiAAAAJgAAAArAAAAKwAAAGQAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
        AM4AAABjAAAAPgAAAPIAAAD4AAAA2gAAALkAAACJAAAAVQAAACkAAAAMAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        wAfgSMAH8ADAD/wAwD/8AOA//AAAP/wAAD8=
</value>
  </data>
</root>